The scripts in this directory are for using Dakota to generate
parameters for use in E3SM namelist files for a sensitivity
analysis. Some instructions for running and modifying the scripts 
can be found below. 


================================================================================
RUNNING

1.) Load dakota module: 
    (For systems other than skybridge, ensure that dakota is installed.) 

  source modules_dakota.sh 

2.) Execute the command: 

  dakota dakota.in 


================================================================================
DESCRIPTION

Running 'dakota dakota.in' will execute the script test-driver-sbatch.sh 
for parameter(s) sampled from the distribution(s) specified in the variables 
section of the file dakota.in.  test-driver-sbatch.sh will launch a number of 
individual batch jobs, one for each value of the parameter sampled. The total 
number of jobs will be the number of samples in the sampling section (if using 
a sampling method).  N of these will be launched at a time, where N is
the 'system asynchronous evaluation_concurrency' value in dakota.in .  

To modify the existing scripts to do an E3SM run, the following steps must be taken: 

1.) test.template must be replaced by the input file for an E3SM run, with the values 
of the parameters you wish to vary replaced by {x1}, {x2}, etc. in this file.

2.) dakota.in must be modified to specify the right number of variables in the variables 
section, and the desired values/distributions for each one. 

3.) Replace 'test.in' with the name of the input file that E3SM expects in dakota.sbatch. 
Depending on what you want to do, you may need to edit the dprepro run to do the right thing, which 
is basically create an input file for E3SM in which {x1}. {x2}, etc. in test.template
are replaced by the values generated by dakota sampling.

4.) Under '#Run step" in 'dakota.in', put in the line you use to run E3SM.
 
5.) Replace the part of the code under '#Post-processing' with the execution of a 
relevant post-processing script for the E3SM run.  This script should extract a relevant QoI 
from the output of the run and place it in the output file $arg2. 


================================================================================
GENERAL NOTES 

- If you change the name of dakota.sbatch, test.template and/or test-driver-sbatch.sh, you'll need 
to modify the names of the files under link_files and copy_files in dakota.in.  

- You may need to edit the WCID in dakota.batch. 

- You will need to change the time in dakota.batch for an E3SM run.  Note that if the run times out or dies,
one can always restart it in the same directory later on, so one should not worry about this too much. 
 

================================================================================
POSTPROCESSING 

- The extract_params.sh can be used to extract the parameters from each test_dir and write them to an ascii file
within that dir.  The following three values need to be edited: 

start_case=126
end_case=150
offset=125

The offset is to specify the name of the params.in.* file in a given dir.  For example, if test_dir.126 
has params.in.1 in it, the offset is 125. 

- After extract_params.sh is run ('source extract_params.sh'), one can create an ascii file that is loadable
into Excel as follows: 

cp test_dir*/p*csv .
cat p1.csv nl p2.csv nl p3.csv nl ...  pN.csv >& p.csv

p.csv can be loaded into Excel but requires some post-processing, namely removal of the columns and rows 
that have 'null' in them.  
